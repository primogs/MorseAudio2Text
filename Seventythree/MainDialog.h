/////////////////////////////////////////////////////////////////////////////////////////
//    This file is part of Seventythree.
//
//    Copyright (C) 2020 Matthias Hund
//    
//    This program is free software; you can redistribute it and/or
//    modify it under the terms of the GNU General Public License
//    as published by the Free Software Foundation; either version 2
//    of the License, or (at your option) any later version.
//    
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//    
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
/////////////////////////////////////////////////////////////////////////////////////////
#ifndef __guiMainDialogBase__
#define __guiMainDialogBase__

/**
@file
Subclass of MainDialogBase, which is generated by wxFormBuilder.
*/
#include <thread>
#include <portaudio.h>
#include <vector>
#include "MorseGUI.h"
#include "MorseDecode.h"
#include "ConfigFile.h"
#include <wx/msgdlg.h> 

//// end generated include

/** Implementing MainDialogBase */
/**
 * @class MainDialog
 * @author Matthias Hund
 * @date 06/06/20
 * @file MainDialog.h
 * @brief subclass of the wxFormBuilder generated MainDialogBase that inherit the elements of the gui and add some functionality to it
 */
class MainDialog : public MainDialogBase, private ConfigFile
{
public:
	/** Constructor */
	MainDialog( wxWindow* parent );
	~MainDialog();
	//// end generated class members
protected:
	// Handlers for MainDialogBase events.
	void OnCloseDialog( wxCloseEvent& event );
	void onButtonStop( wxCommandEvent& event );
	void onButtonStart( wxCommandEvent& event );
	void onClearOutputTxt( wxCommandEvent& event );
	void onTimerOut( wxTimerEvent& event );
	void onTimerStat( wxTimerEvent& event );
	void onGainScroll( wxScrollEvent& event );

private:
	void SetupMorseDecode();
	void ClearWidgets();
	std::thread *		mpListenThread;		//!< pointer to the listen thread that process the audio data
	std::time_t 		mTimerNoReceive;	//!< timestamp used to check if nothing is received
	unsigned int 		mAddNewLine;		//!< helper variable used to add a new line if nothing is received for a while 
};

#endif // __guiMainDialogBase__
